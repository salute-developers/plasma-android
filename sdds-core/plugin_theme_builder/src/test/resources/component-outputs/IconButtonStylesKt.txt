// AUTO-GENERATED. DO NOT MODIFY this file.
package com.sdds.playground.themebuilder.styles.button

import androidx.compose.runtime.Composable
import androidx.compose.ui.unit.dp
import com.sdds.compose.uikit.Button
import com.sdds.compose.uikit.IconButton
import com.sdds.compose.uikit.IconButtonStyleBuilder
import com.sdds.compose.uikit.adjustBy
import com.sdds.compose.uikit.interactions.InteractiveState
import com.sdds.compose.uikit.interactions.asInteractive
import com.sdds.playground.themebuilder.theme.SddsServTheme

public val IconButton.L: IconButtonStyleBuilder
    @Composable
    get() = IconButtonStyleBuilder.builder(this)
        .shape(SddsServTheme.shapes.roundL.adjustBy(all = -2.0.dp))
        .dimensions(
            Button.Dimensions(
                height = 56.0.dp,
                paddings = Button.Dimensions.PaddingValues(
                    start = 24.0.dp,
                    end = 24.0.dp,
                ),
                minWidth = 98.0.dp,
                iconSize = 24.0.dp,
                spinnerSize = 22.0.dp,
            ),
        )

public val IconButton.M: IconButtonStyleBuilder
    @Composable
    get() = IconButtonStyleBuilder.builder(this)
        .shape(SddsServTheme.shapes.roundM)
        .dimensions(
            Button.Dimensions(
                height = 56.0.dp,
                paddings = Button.Dimensions.PaddingValues(
                    start = 24.0.dp,
                    end = 24.0.dp,
                ),
                minWidth = 98.0.dp,
                iconSize = 24.0.dp,
                spinnerSize = 22.0.dp,
            ),
        )

public val IconButton.S: IconButtonStyleBuilder
    @Composable
    get() = IconButtonStyleBuilder.builder(this)
        .shape(SddsServTheme.shapes.roundS.adjustBy(all = 2.0.dp))
        .dimensions(
            Button.Dimensions(
                height = 56.0.dp,
                paddings = Button.Dimensions.PaddingValues(
                    start = 24.0.dp,
                    end = 24.0.dp,
                ),
                minWidth = 98.0.dp,
                iconSize = 24.0.dp,
                spinnerSize = 22.0.dp,
            ),
        )

public val IconButtonStyleBuilder.Default: IconButtonStyleBuilder
    @Composable
    get() = this.colors {
        contentColor(SddsServTheme.colors.textInversePrimaryActive.asInteractive())
        backgroundColor(SddsServTheme.colors.surfaceInversePrimaryActive.asInteractive(setOf(InteractiveState.Pressed,
                InteractiveState.Focused) to SddsServTheme.colors.surfaceInversePrimaryPressed))
        spinnerMode(Button.SpinnerMode.SemitransparentContent(0.02f))
    }

public val IconButtonStyleBuilder.Warning: IconButtonStyleBuilder
    @Composable
    get() = this.colors {
        contentColor(SddsServTheme.colors.textInverseWarningActive.asInteractive())
        backgroundColor(SddsServTheme.colors.surfaceInverseWarningActive.asInteractive(setOf(InteractiveState.Pressed,
                InteractiveState.Focused) to SddsServTheme.colors.surfaceInverseWarningPressed))
        spinnerMode(Button.SpinnerMode.SemitransparentContent(0.02f))
    }
