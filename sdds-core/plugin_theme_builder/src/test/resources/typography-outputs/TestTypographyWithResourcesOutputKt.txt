// AUTO-GENERATED. DO NOT MODIFY this file.
@file:Suppress("DEPRECATION")

package com.test.tokens

import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.ui.platform.LocalDensity
import androidx.compose.ui.res.dimensionResource
import androidx.compose.ui.text.PlatformTextStyle
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.LineHeightStyle
import androidx.compose.ui.unit.sp
import com.test.R
import kotlin.Suppress

public object TypographyLargeTokens {
    /**
     * шрифт android
     */
    public val DisplayLNormal: TextStyle
        @Composable
        @ReadOnlyComposable
        get() = with(LocalDensity.current) {
        TextStyle(
            fontWeight = FontWeight(300),
            fontSize =
                dimensionResource(R.dimen.thmbldr_screen_l_display_l_normal_text_size).toSp(),
            lineHeight =
                dimensionResource(R.dimen.thmbldr_screen_l_display_l_normal_line_height).toSp(),
            letterSpacing = 0.02.sp,
            fontFamily = FontTokens.sans,
            lineHeightStyle = LineHeightStyle(alignment = LineHeightStyle.Alignment.Center, trim =
                LineHeightStyle.Trim.None),
            platformStyle = PlatformTextStyle(includeFontPadding = false),
        )
        }

    /**
     * шрифт android
     */
    public val DisplayLBold: TextStyle
        @Composable
        @ReadOnlyComposable
        get() = with(LocalDensity.current) {
        TextStyle(
            fontWeight = FontWeight(300),
            fontSize = dimensionResource(R.dimen.thmbldr_screen_l_display_l_bold_text_size).toSp(),
            lineHeight =
                dimensionResource(R.dimen.thmbldr_screen_l_display_l_bold_line_height).toSp(),
            letterSpacing = 0.02.sp,
            fontFamily = FontTokens.sans,
            lineHeightStyle = LineHeightStyle(alignment = LineHeightStyle.Alignment.Center, trim =
                LineHeightStyle.Trim.None),
            platformStyle = PlatformTextStyle(includeFontPadding = false),
        )
        }
}

public object TypographySmallTokens {
    /**
     * шрифт android
     */
    public val TextLNormal: TextStyle
        @Composable
        @ReadOnlyComposable
        get() = with(LocalDensity.current) {
        TextStyle(
            fontWeight = FontWeight(400),
            fontSize = dimensionResource(R.dimen.thmbldr_screen_s_text_l_normal_text_size).toSp(),
            lineHeight =
                dimensionResource(R.dimen.thmbldr_screen_s_text_l_normal_line_height).toSp(),
            letterSpacing = 0.04.sp,
            fontFamily = FontTokens.sans,
            lineHeightStyle = LineHeightStyle(alignment = LineHeightStyle.Alignment.Center, trim =
                LineHeightStyle.Trim.None),
            platformStyle = PlatformTextStyle(includeFontPadding = false),
        )
        }

    /**
     * шрифт android
     */
    public val DisplayLNormal: TextStyle
        @Composable
        @ReadOnlyComposable
        get() = with(LocalDensity.current) {
        TextStyle(
            fontWeight = FontWeight(300),
            fontSize =
                dimensionResource(R.dimen.thmbldr_screen_s_display_l_normal_text_size).toSp(),
            lineHeight =
                dimensionResource(R.dimen.thmbldr_screen_s_display_l_normal_line_height).toSp(),
            letterSpacing = 0.02.sp,
            fontFamily = FontTokens.sans,
            lineHeightStyle = LineHeightStyle(alignment = LineHeightStyle.Alignment.Center, trim =
                LineHeightStyle.Trim.None),
            platformStyle = PlatformTextStyle(includeFontPadding = false),
        )
        }
}

public object TypographyMediumTokens {
    /**
     * шрифт android
     */
    public val HeaderLNormal: TextStyle
        @Composable
        @ReadOnlyComposable
        get() = with(LocalDensity.current) {
        TextStyle(
            fontWeight = FontWeight(400),
            fontSize = dimensionResource(R.dimen.thmbldr_screen_m_header_l_normal_text_size).toSp(),
            lineHeight =
                dimensionResource(R.dimen.thmbldr_screen_m_header_l_normal_line_height).toSp(),
            letterSpacing = 0.04.sp,
            fontFamily = FontTokens.sans,
            lineHeightStyle = LineHeightStyle(alignment = LineHeightStyle.Alignment.Center, trim =
                LineHeightStyle.Trim.None),
            platformStyle = PlatformTextStyle(includeFontPadding = false),
        )
        }

    /**
     * шрифт android
     */
    public val DisplayLNormal: TextStyle
        @Composable
        @ReadOnlyComposable
        get() = with(LocalDensity.current) {
        TextStyle(
            fontWeight = FontWeight(300),
            fontSize =
                dimensionResource(R.dimen.thmbldr_screen_m_display_l_normal_text_size).toSp(),
            lineHeight =
                dimensionResource(R.dimen.thmbldr_screen_m_display_l_normal_line_height).toSp(),
            letterSpacing = 0.02.sp,
            fontFamily = FontTokens.sans,
            lineHeightStyle = LineHeightStyle(alignment = LineHeightStyle.Alignment.Center, trim =
                LineHeightStyle.Trim.None),
            platformStyle = PlatformTextStyle(includeFontPadding = false),
        )
        }
}
