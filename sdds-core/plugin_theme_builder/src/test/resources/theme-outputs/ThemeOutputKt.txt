// AUTO-GENERATED. DO NOT MODIFY this file.
package com.sdds.playground.themebuilder.tokens.compose

import androidx.compose.foundation.text.selection.LocalTextSelectionColors
import androidx.compose.foundation.text.selection.TextSelectionColors
import androidx.compose.runtime.Composable
import androidx.compose.runtime.CompositionLocal
import androidx.compose.runtime.CompositionLocalProvider
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.runtime.remember
import com.sdds.compose.uikit.ProvideTextStyle
import com.sdds.playground.themebuilder.tokens.compose.TestColors
import com.sdds.playground.themebuilder.tokens.compose.TestGradients
import com.sdds.playground.themebuilder.tokens.compose.TestShapes
import com.sdds.playground.themebuilder.tokens.compose.TestTypography
import kotlin.Unit

public object TestTheme {
    public val colors: TestColors
        @Composable
        @ReadOnlyComposable
        get() = LocalTestColors.current

    public val gradients: TestGradients
        @Composable
        @ReadOnlyComposable
        get() = LocalTestGradients.current

    public val shapes: TestShapes
        @Composable
        @ReadOnlyComposable
        get() = LocalTestShapes.current

    public val typography: TestTypography
        @Composable
        @ReadOnlyComposable
        get() = LocalTestTypography.current
}

/**
 * Базовая тема Test
 */
@Composable
public fun TestTheme(
    colors: TestColors = TestTheme.colors,
    gradients: TestGradients = TestTheme.gradients,
    shapes: TestShapes = defaultTestShapes(),
    typography: TestTypography = dynamicTestTypography(),
    content: @Composable () -> Unit,
): Unit {
    val rememberColors = remember { colors.copy() }.apply { updateColorsFrom(colors) }

    CompositionLocalProvider(
        LocalTestColors provides rememberColors,
        LocalTestGradients provides gradients,
        LocalTestTypography provides typography,
        LocalTestShapes provides shapes,
        content = content,
    )
}
